/**
 *Licensed to the Apache Software Foundation (ASF) under one
 *or more contributor license agreements.  See the NOTICE file
 *distributed with this work for additional information
 *regarding copyright ownership.  The ASF licenses this file
 *to you under the Apache License, Version 2.0 (the
 *"License"); you may not use this file except in compliance
 *with the License.  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing,
 *software distributed under the License is distributed on an
 *"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 *specific language governing permissions and limitations
 *under the License.
 */

#include <iostream>

#include "celix/api.h"
#include "celix/IShellCommand.h"
#include "celix/IShell.h"

#include "celix/ShellTui.h"

namespace {

    class ShellTuiBundleActivator : public celix::IBundleActivator {
    public:
        ShellTuiBundleActivator(std::shared_ptr<celix::BundleContext> ctx) {
            celix::ServiceTrackerOptions<celix::IShell> opts{};
            opts.set = std::bind(&celix::ShellTui::setShell, &tui, std::placeholders::_1);
            trk = ctx->trackServices(opts);
        }
    private:
        celix::ShellTui tui{&std::cout, &std::cerr};
        celix::ServiceTracker trk{};
    };

    //NOTE that eventually the (ctor) bundle register will be generated by a CMake command (i.e. add_bundle)
    __attribute__((constructor))
    static void registerShellBundle() {
        celix::Properties manifest{};
        manifest[celix::MANIFEST_BUNDLE_NAME] = "Shell Tui";
        manifest[celix::MANIFEST_BUNDLE_GROUP] = "Celix";
        manifest[celix::MANIFEST_BUNDLE_VERSION] = "1.0.0";
        celix::registerStaticBundle<ShellTuiBundleActivator>("celix::ShellTui", std::move(manifest));
    }
}